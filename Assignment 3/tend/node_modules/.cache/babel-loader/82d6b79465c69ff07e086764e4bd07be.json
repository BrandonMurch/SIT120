{"remainingRequest":"/home/brandon/Documents/Independent Programming/tend/node_modules/thread-loader/dist/cjs.js!/home/brandon/Documents/Independent Programming/tend/node_modules/babel-loader/lib/index.js!/home/brandon/Documents/Independent Programming/tend/node_modules/eslint-loader/index.js??ref--13-0!/home/brandon/Documents/Independent Programming/tend/src/composables/arrangeImages.js","dependencies":[{"path":"/home/brandon/Documents/Independent Programming/tend/src/composables/arrangeImages.js","mtime":1632342011152},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEhhbmRsZXMgdGhlIG9yZ2FuaXNhdGlvbiBvZiBpbWFnZXMgd2l0aGluIHRoZSBpbWFnZSBnYWxsZXJ5LiBVc2VzIGEgdmVydGljYWwgY29sdW1uIGxheW91dC4gCiAqLwppbXBvcnQgeyByZWYgfSBmcm9tICd2dWUnOwpleHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gKCkgewogIHZhciBudW1iZXJPZkNvbHVtbnMgPSAwOwogIHZhciBpbWFnZUNvbHVtbnMgPSByZWYoW10pOwogIHZhciBsb2FkZWRJbWFnZXMgPSAwOwogIHZhciBhbGxJbWFnZXNMb2FkZWQgPSByZWYoZmFsc2UpOwogIHZhciBjb250YWluZXIgPSByZWYobnVsbCk7IC8vIEFzc2lnbiBlYWNoIGltYWdlIHRvIGEgY29sdW1uIGZyb20gbGVmdCB0byByaWdodC4gCgogIHZhciBzcGxpdEltYWdlc0ludG9Db2x1bW5zID0gZnVuY3Rpb24gc3BsaXRJbWFnZXNJbnRvQ29sdW1ucyhpbWFnZXMpIHsKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaW1hZ2VzLmxlbmd0aDsgaSsrKSB7CiAgICAgIGltYWdlQ29sdW1ucy52YWx1ZVtpICUgbnVtYmVyT2ZDb2x1bW5zXS5wdXNoKGltYWdlc1tpXSk7CiAgICB9CgogICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IG51bWJlck9mQ29sdW1uczsgX2krKykgewogICAgICBpbWFnZUNvbHVtbnMudmFsdWVbX2ldLnB1c2goKTsKICAgIH0KICB9OyAvLyBDcmVhdGVzIHRoZSBudW1iZXIgb2YgY29sdW1ucyBiYXNlZCBvbiB0aGUgY29udGFpbmVyIHdpZHRoCgoKICB2YXIgaW5pdGlhbGlzZUNvbHVtbnMgPSBmdW5jdGlvbiBpbml0aWFsaXNlQ29sdW1ucygpIHsKICAgIHZhciBwYWdlTWFyZ2lucyA9IDMwOwogICAgdmFyIGNhcmRXaWR0aCA9IDI3MDsKICAgIG51bWJlck9mQ29sdW1ucyA9IE1hdGguZmxvb3IoKGNvbnRhaW5lci52YWx1ZS5jbGllbnRXaWR0aCAtIHBhZ2VNYXJnaW5zKSAvIGNhcmRXaWR0aCk7IC8vIFN0b3AgZGl2aXNpb25zIGJ5IDAuCgogICAgaWYgKG51bWJlck9mQ29sdW1ucyA8PSAwKSB7CiAgICAgIG51bWJlck9mQ29sdW1ucyA9IDE7CiAgICB9CgogICAgdmFyIGNvbHVtblF1ZXVlID0gW107CgogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBudW1iZXJPZkNvbHVtbnM7IGkrKykgewogICAgICBjb2x1bW5RdWV1ZVtpXSA9IFtdOwogICAgfQoKICAgIGltYWdlQ29sdW1ucy52YWx1ZSA9IGNvbHVtblF1ZXVlOwogIH07CgogIHZhciB1cGRhdGVDb2x1bW5zID0gZnVuY3Rpb24gdXBkYXRlQ29sdW1ucyhpbWFnZXMpIHsKICAgIGxvYWRlZEltYWdlcyA9IDA7CiAgICBpbml0aWFsaXNlQ29sdW1ucygpOwogICAgc3BsaXRJbWFnZXNJbnRvQ29sdW1ucyhpbWFnZXMpOwogIH07IC8vIFVwZGF0ZSB0aGUgYWxsSW1hZ2VzTG9hZGVkIGJvb2xlYW4uCgoKICB2YXIgc2V0QWxsSW1hZ2VzTG9hZGVkSWZUcnVlID0gZnVuY3Rpb24gc2V0QWxsSW1hZ2VzTG9hZGVkSWZUcnVlKGltYWdlcykgewogICAgbG9hZGVkSW1hZ2VzKys7CgogICAgaWYgKGxvYWRlZEltYWdlcyA9PT0gaW1hZ2VzLmxlbmd0aCkgewogICAgICBhbGxJbWFnZXNMb2FkZWQudmFsdWUgPSB0cnVlOwogICAgfQogIH07CgogIHJldHVybiB7CiAgICBjb250YWluZXI6IGNvbnRhaW5lciwKICAgIGFsbEltYWdlc0xvYWRlZDogYWxsSW1hZ2VzTG9hZGVkLAogICAgdXBkYXRlQ29sdW1uczogdXBkYXRlQ29sdW1ucywKICAgIGltYWdlQ29sdW1uczogaW1hZ2VDb2x1bW5zLAogICAgc2V0QWxsSW1hZ2VzTG9hZGVkSWZUcnVlOiBzZXRBbGxJbWFnZXNMb2FkZWRJZlRydWUKICB9Owp9KTs="},{"version":3,"sources":["/home/brandon/Documents/Independent Programming/tend/src/composables/arrangeImages.js"],"names":["ref","numberOfColumns","imageColumns","loadedImages","allImagesLoaded","container","splitImagesIntoColumns","images","i","length","value","push","initialiseColumns","pageMargins","cardWidth","Math","floor","clientWidth","columnQueue","updateColumns","setAllImagesLoadedIfTrue"],"mappings":"AAAA;AACA;AACA;AAEA,SAASA,GAAT,QAAoB,KAApB;AAEA,gBAAe,YAAM;AACjB,MAAIC,eAAe,GAAG,CAAtB;AACA,MAAMC,YAAY,GAAGF,GAAG,CAAC,EAAD,CAAxB;AACA,MAAIG,YAAY,GAAG,CAAnB;AACA,MAAMC,eAAe,GAAGJ,GAAG,CAAC,KAAD,CAA3B;AACA,MAAMK,SAAS,GAAGL,GAAG,CAAC,IAAD,CAArB,CALiB,CAOjB;;AACA,MAAMM,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,MAAD,EAAY;AACvC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAAM,CAACE,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpCN,MAAAA,YAAY,CAACQ,KAAb,CAAmBF,CAAC,GAAGP,eAAvB,EAAwCU,IAAxC,CAA6CJ,MAAM,CAACC,CAAD,CAAnD;AACH;;AAED,SAAK,IAAIA,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGP,eAApB,EAAqCO,EAAC,EAAtC,EAA0C;AACtCN,MAAAA,YAAY,CAACQ,KAAb,CAAmBF,EAAnB,EAAsBG,IAAtB;AACH;AACJ,GARD,CARiB,CAkBjB;;;AACA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5B,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,SAAS,GAAG,GAAlB;AACAb,IAAAA,eAAe,GAAGc,IAAI,CAACC,KAAL,CACd,CAACX,SAAS,CAACK,KAAV,CAAgBO,WAAhB,GAA8BJ,WAA/B,IAA8CC,SADhC,CAAlB,CAH4B,CAM5B;;AACA,QAAIb,eAAe,IAAI,CAAvB,EAA0B;AACtBA,MAAAA,eAAe,GAAG,CAAlB;AACH;;AACD,QAAMiB,WAAW,GAAG,EAApB;;AACA,SAAK,IAAIV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,eAApB,EAAqCO,CAAC,EAAtC,EAA0C;AACtCU,MAAAA,WAAW,CAACV,CAAD,CAAX,GAAiB,EAAjB;AACH;;AAEDN,IAAAA,YAAY,CAACQ,KAAb,GAAqBQ,WAArB;AACH,GAhBD;;AAkBA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACZ,MAAD,EAAY;AAC9BJ,IAAAA,YAAY,GAAG,CAAf;AAEAS,IAAAA,iBAAiB;AACjBN,IAAAA,sBAAsB,CAACC,MAAD,CAAtB;AACH,GALD,CArCiB,CA4CjB;;;AACA,MAAMa,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACb,MAAD,EAAY;AACzCJ,IAAAA,YAAY;;AACZ,QAAIA,YAAY,KAAKI,MAAM,CAACE,MAA5B,EAAoC;AAChCL,MAAAA,eAAe,CAACM,KAAhB,GAAwB,IAAxB;AACH;AACJ,GALD;;AAOA,SAAO;AAAEL,IAAAA,SAAS,EAATA,SAAF;AAAaD,IAAAA,eAAe,EAAfA,eAAb;AAA8Be,IAAAA,aAAa,EAAbA,aAA9B;AAA6CjB,IAAAA,YAAY,EAAZA,YAA7C;AAA2DkB,IAAAA,wBAAwB,EAAxBA;AAA3D,GAAP;AAEH,CAtDD","sourcesContent":["/**\n * Handles the organisation of images within the image gallery. Uses a vertical column layout. \n */\n\nimport { ref } from 'vue';\n\nexport default () => {\n    let numberOfColumns = 0;\n    const imageColumns = ref([]);\n    let loadedImages = 0;\n    const allImagesLoaded = ref(false);\n    const container = ref(null);\n\n    // Assign each image to a column from left to right. \n    const splitImagesIntoColumns = (images) => {\n        for (let i = 0; i < images.length; i++) {\n            imageColumns.value[i % numberOfColumns].push(images[i]);\n        }\n\n        for (let i = 0; i < numberOfColumns; i++) {\n            imageColumns.value[i].push();\n        }\n    };\n\n    // Creates the number of columns based on the container width\n    const initialiseColumns = () => {\n        const pageMargins = 30;\n        const cardWidth = 270;\n        numberOfColumns = Math.floor(\n            (container.value.clientWidth - pageMargins) / cardWidth\n        );\n        // Stop divisions by 0.\n        if (numberOfColumns <= 0) {\n            numberOfColumns = 1;\n        }\n        const columnQueue = [];\n        for (let i = 0; i < numberOfColumns; i++) {\n            columnQueue[i] = [];\n        }\n\n        imageColumns.value = columnQueue;\n    };\n\n    const updateColumns = (images) => {\n        loadedImages = 0;\n\n        initialiseColumns();\n        splitImagesIntoColumns(images);\n    };\n\n    // Update the allImagesLoaded boolean.\n    const setAllImagesLoadedIfTrue = (images) => {\n        loadedImages++;\n        if (loadedImages === images.length) {\n            allImagesLoaded.value = true;\n        }\n    };\n\n    return { container, allImagesLoaded, updateColumns, imageColumns, setAllImagesLoadedIfTrue }\n\n}"]}]}