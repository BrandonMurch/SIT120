{"remainingRequest":"/home/brandon/Documents/Independent Programming/tend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/brandon/Documents/Independent Programming/tend/src/components/ImageGallery.vue?vue&type=style&index=0&id=324ba608&scoped=true&lang=css","dependencies":[{"path":"/home/brandon/Documents/Independent Programming/tend/src/components/ImageGallery.vue","mtime":1632333631821},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1632324173000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1632324173000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5nYWxsZXJ5LWNvbnRhaW5lciB7CgltYXJnaW46IGF1dG87CglkaXNwbGF5OiBmbGV4OwoJd2lkdGg6IDEwMCU7CglqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKfQoKLmdhbGxlcnktY29sdW1uIHsKCW1hcmdpbjogMC41cmVtOwp9CgoucmVsb2FkLXRyaWdnZXIgewoJd2lkdGg6IDEwMHZ3OwoJaGVpZ2h0OiAyMHB4Owp9Cg=="},{"version":3,"sources":["/home/brandon/Documents/Independent Programming/tend/src/components/ImageGallery.vue"],"names":[],"mappings":";AAkIA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;CAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;CACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;CACb,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;CACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;CACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;CACf,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;CACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACb","file":"/home/brandon/Documents/Independent Programming/tend/src/components/ImageGallery.vue","sourceRoot":"","sourcesContent":["<!-- Once the bottom of the page is reached, 'moreImages' will be emitted. A slot is\nprovided for a special card to be placed in the first place of the first column. -->\n\n<!--\nDescription: \t\tPresents images within the space given. Arranges the image \n\t\t\t\t\tinto columns. \n\nProps: \n\timages\t\t\tAn array of image objects, including an image url, and \t\n\t\t\t\t\toptional actions and title.\n\n\tincludeActions\tBoolean. Whether or not to include action buttons with the \n\t\t\t\t\timages\n\nEmits: \n\n\tmoreImages\t\tEmitted upon reaching the bottom of the gallery. A request \n\t\t\t\t\tfor more images if they are available.\n\n\titemClick\t\tEmitted when a card is clicked. Returns the image object \t\t\t\t\tfrom that card.\n\t\t\t\n\tperformAction\tCall performaction if actions were included. Returns an \n\t\t\t\t\tobject with an id and action.\n\nSlots:\n\tdefault \tPlaces an element in the first spot of the first column.\n-->\n\n<template>\n\t<div ref=\"container\" class=\"gallery-container\">\n\t\t<div\n\t\t\tclass=\"gallery-column\"\n\t\t\tv-for=\"(column, index) in imageColumns\"\n\t\t\t:key=\"index\"\n\t\t>\n\t\t\t<slot v-if=\"index == 0\" />\n\t\t\t<ImageCard\n\t\t\t\tv-for=\"image in column\"\n\t\t\t\t:key=\"image.id\"\n\t\t\t\tv-bind=\"image\"\n\t\t\t\t@imageLoaded=\"() => setAllImagesLoadedIfTrue(images)\"\n\t\t\t\t@imageClick=\"$emit('itemClick', image)\"\n\t\t\t\t:actions=\"includeActions ? image.actions : []\"\n\t\t\t\tstyle=\"width:250px\"\n\t\t\t\t@performAction=\"\n\t\t\t\t\t(action) => $emit('performAction', { id: image.id, action })\n\t\t\t\t\"\n\t\t\t/>\n\t\t</div>\n\t</div>\n\t<!-- Only display once all images are loaded, to prevent hitting it initially -->\n\t<div\n\t\tv-show=\"allImagesLoaded\"\n\t\tclass=\"reload-trigger\"\n\t\tref=\"reloadTrigger\"\n\t></div>\n</template>\n\n<script>\nimport ImageCard from \"./CardImage.vue\";\nimport { debounce } from \"../helpers/debounce.js\";\nimport { ref, watch, onMounted, onUnmounted } from \"vue\";\nimport windowSizeWatcher from \"../composables/windowSizeWatcher\";\nimport arrangeImages from \"../composables/arrangeImages\";\n\nexport default {\n\tname: \"ImageGallery\",\n\tcomponents: {\n\t\tImageCard,\n\t},\n\tprops: {\n\t\timages: Array,\n\t\tincludeActions: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\temits: [\"itemClick\", \"moreImages\", \"performAction\"],\n\n\tsetup(props, { emit }) {\n\t\tlet observer = null;\n\t\tconst reloadTrigger = ref(null);\n\n\t\tconst {\n\t\t\tcontainer,\n\t\t\tallImagesLoaded,\n\t\t\tupdateColumns,\n\t\t\tsetAllImagesLoadedIfTrue,\n\t\t\timageColumns,\n\t\t} = arrangeImages();\n\n\t\tconst debounceUpdateSize = debounce(() => updateColumns(props.images));\n\t\twindowSizeWatcher(debounceUpdateSize);\n\n\t\t// When I only used props.images instead of () => props.images, watch wouldn't be triggered by props changes.\n\t\twatch(\n\t\t\t() => props.images,\n\t\t\t(currentValue) => {\n\t\t\t\tupdateColumns(currentValue);\n\t\t\t}\n\t\t);\n\n\t\t// Must wait until mounted to create observer. Otherwise reloadTrigger will not have been attached to element.\n\t\tonMounted(() => {\n\t\t\tobserver = new IntersectionObserver((entries) => {\n\t\t\t\tif (entries[0].isIntersecting === true) {\n\t\t\t\t\temit(\"moreImages\");\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tobserver.observe(reloadTrigger.value);\n\t\t\tupdateColumns(props.images);\n\t\t});\n\n\t\tonUnmounted(() => {\n\t\t\tobserver.disconnect();\n\t\t});\n\n\t\treturn {\n\t\t\treloadTrigger,\n\t\t\tsetAllImagesLoadedIfTrue,\n\t\t\tcontainer,\n\t\t\tallImagesLoaded,\n\t\t\timageColumns,\n\t\t};\n\t},\n};\n</script>\n\n<style scoped>\n.gallery-container {\n\tmargin: auto;\n\tdisplay: flex;\n\twidth: 100%;\n\tjustify-content: center;\n}\n\n.gallery-column {\n\tmargin: 0.5rem;\n}\n\n.reload-trigger {\n\twidth: 100vw;\n\theight: 20px;\n}\n</style>\n"]}]}