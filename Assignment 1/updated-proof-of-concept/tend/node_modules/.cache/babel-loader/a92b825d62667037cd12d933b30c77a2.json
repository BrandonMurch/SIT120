{"remainingRequest":"/home/brandon/Documents/Independent Programming/tend/node_modules/babel-loader/lib/index.js!/home/brandon/Documents/Independent Programming/tend/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/brandon/Documents/Independent Programming/tend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/brandon/Documents/Independent Programming/tend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/brandon/Documents/Independent Programming/tend/src/components/ImageGallery.vue?vue&type=template&id=d1d58bb2&scoped=true","dependencies":[{"path":"/home/brandon/Documents/Independent Programming/tend/src/components/ImageGallery.vue","mtime":1629783242965},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/cache-loader/dist/cjs.js","mtime":1628388539905},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/babel-loader/lib/index.js","mtime":1628388539905},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1628388539545},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/cache-loader/dist/cjs.js","mtime":1628388539905},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/vue-loader-v16/dist/index.js","mtime":1628388539541}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVuZGVyTGlzdCBhcyBfcmVuZGVyTGlzdCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCByZXNvbHZlQ29tcG9uZW50IGFzIF9yZXNvbHZlQ29tcG9uZW50LCBtZXJnZVByb3BzIGFzIF9tZXJnZVByb3BzLCBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUsIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCB2U2hvdyBhcyBfdlNob3csIHdpdGhEaXJlY3RpdmVzIGFzIF93aXRoRGlyZWN0aXZlcywgd2l0aFNjb3BlSWQgYXMgX3dpdGhTY29wZUlkLCBwdXNoU2NvcGVJZCBhcyBfcHVzaFNjb3BlSWQsIHBvcFNjb3BlSWQgYXMgX3BvcFNjb3BlSWQgfSBmcm9tICJ2dWUiOwoKdmFyIF93aXRoSWQgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKCJkYXRhLXYtZDFkNThiYjIiKTsKCl9wdXNoU2NvcGVJZCgiZGF0YS12LWQxZDU4YmIyIik7Cgp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogImdhbGxlcnktY29udGFpbmVyIgp9Owp2YXIgX2hvaXN0ZWRfMiA9IHsKICBjbGFzczogInJlbG9hZC10cmlnZ2VyIiwKICByZWY6ICJyZWxvYWQiCn07CgpfcG9wU2NvcGVJZCgpOwoKZXhwb3J0IHZhciByZW5kZXIgPSAvKiNfX1BVUkVfXyovX3dpdGhJZChmdW5jdGlvbiAoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF9jb21wb25lbnRfSW1hZ2VDYXJkID0gX3Jlc29sdmVDb21wb25lbnQoIkltYWdlQ2FyZCIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX0ZyYWdtZW50LCBudWxsLCBbX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xLCBbKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KCRkYXRhLmltYWdlQ29sdW1ucywgZnVuY3Rpb24gKGNvbHVtbiwgaW5kZXgpIHsKICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgewogICAgICBjbGFzczogImdhbGxlcnktY29sdW1uIiwKICAgICAga2V5OiBpbmRleAogICAgfSwgWyhfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlQmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdChjb2x1bW4sIGZ1bmN0aW9uIChpbWFnZSkgewogICAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9JbWFnZUNhcmQsIF9tZXJnZVByb3BzKHsKICAgICAgICBrZXk6IGltYWdlLmlkCiAgICAgIH0sIGltYWdlLCB7CiAgICAgICAgb25JbWFnZUxvYWRlZDogJG9wdGlvbnMuc2V0QWxsSW1hZ2VzTG9hZGVkSWZUcnVlLAogICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soJGV2ZW50KSB7CiAgICAgICAgICByZXR1cm4gX2N0eC4kZW1pdCgnaXRlbUNsaWNrJywgaW1hZ2UpOwogICAgICAgIH0KICAgICAgfSksIG51bGwsIDE2CiAgICAgIC8qIEZVTExfUFJPUFMgKi8KICAgICAgLCBbIm9uSW1hZ2VMb2FkZWQiLCAib25DbGljayJdKTsKICAgIH0pLCAxMjgKICAgIC8qIEtFWUVEX0ZSQUdNRU5UICovCiAgICApKV0pOwogIH0pLCAxMjgKICAvKiBLRVlFRF9GUkFHTUVOVCAqLwogICkpXSksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiBPbmx5IGRpc3BsYXkgb25jZSBhbGwgaW1hZ2VzIGFyZSBsb2FkZWQsIHRvIHByZXZlbnQgaGl0dGluZyBpdCBpbml0aWFsbHkgIiksIF93aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzIsIG51bGwsIDUxMgogIC8qIE5FRURfUEFUQ0ggKi8KICApLCBbW192U2hvdywgJGRhdGEuYWxsSW1hZ2VzTG9hZGVkXV0pXSwgNjQKICAvKiBTVEFCTEVfRlJBR01FTlQgKi8KICApOwp9KTs="},{"version":3,"sources":["/home/brandon/Documents/Independent Programming/tend/src/components/ImageGallery.vue"],"names":[],"mappings":";;;;;;;AACM,EAAA,KAAK,EAAC;;;AAgBmB,EAAA,KAAK,EAAC,gB;AAAiB,EAAA,GAAG,EAAC;;;;;;;;sDAhBzD,YAAA,CAcM,KAdN,EAAA,UAAA,EAcM,E,kBAbL,YAAA,CAYM,SAZN,EAYM,IAZN,EAYM,WAAA,CAVqB,KAAA,CAAA,YAUrB,EAViC,UAA9B,MAA8B,EAAtB,KAAsB,EAAjB;yBAFtB,YAAA,CAYM,KAZN,EAYM;AAXL,MAAA,KAAK,EAAC,gBAWD;AATJ,MAAA,GAAG,EAAE;AASD,KAZN,E,oBAKC,YAAA,CAME,SANF,EAME,IANF,EAME,WAAA,CALe,MAKf,EALqB,UAAf,KAAe,EAAV;2BADb,YAAA,CAME,oBANF,EAAA,WAAA,CAME;AAJA,QAAA,GAAG,EAAE,KAAK,CAAC;AAIX,OANF,EAGS,KAHT,EAGc;AACZ,QAAA,aAAW,EAAE,QAAA,CAAA,wBADD;AAEZ,QAAA,OAAK,EAAA,iBAAA,MAAA;AAAA,iBAAE,IAAA,CAAA,KAAA,CAAK,WAAL,EAAmB,KAAnB,CAAF;AAAA;AAFO,OAHd,CAAA,E,IAAA,E;;AAAA,Q,4BAAA,C;KAME,CANF,E;;AAAA,K,EALD,C;GAYM,CAZN,E;;AAAA,GAaK,EAdN,C,EAeA,mBAAA,CAAA,4EAAA,C,kBACA,YAAA,CAAwE,KAAxE,EAAA,UAAA,EAAwE,IAAxE,EAAwE;AAAA;AAAxE,G,EAAwE,C,SAA3D,KAAA,CAAA,e,CAA2D,C","sourcesContent":["<template>\n\t<div class=\"gallery-container\">\n\t\t<div\n\t\t\tclass=\"gallery-column\"\n\t\t\tv-for=\"(column, index) in imageColumns\"\n\t\t\t:key=\"index\"\n\t\t>\n\t\t\t<ImageCard\n\t\t\t\tv-for=\"image in column\"\n\t\t\t\t:key=\"image.id\"\n\t\t\t\tv-bind=\"image\"\n\t\t\t\t@imageLoaded=\"setAllImagesLoadedIfTrue\"\n\t\t\t\t@click=\"$emit('itemClick', image)\"\n\t\t\t/>\n\t\t</div>\n\t</div>\n\t<!-- Only display once all images are loaded, to prevent hitting it initially -->\n\t<div v-show=\"allImagesLoaded\" class=\"reload-trigger\" ref=\"reload\"></div>\n</template>\n\n<script>\nimport ImageCard from \"./ImageCard.vue\";\nimport { debounce } from \"../helpers/debounce.js\";\n\nexport default {\n\tname: \"ImageGallery\",\n\tcomponents: {\n\t\tImageCard,\n\t},\n\tprops: {\n\t\timages: Array,\n\t},\n\temits: [\"itemClick\", \"moreImages\"],\n\n\t/*\n        Lifecycle hooks are used to create global event listeners. When the component is unmounted, the listener will be removed to prevent memory leaks.\n\n        https://vuejs.org/v2/api/#Options-Lifecycle-Hooks\n        https://vuejs.org/v2/api/#created\n        https://vuejs.org/v2/api/#mounted\n        https://www.w3schools.com/js/js_htmldom_eventlistener.asp\n    */\n\tcreated() {\n\t\twindow.addEventListener(\"resize\", this.debounceUpdateSize);\n\t\tthis.updateColumns();\n\t},\n\tmounted() {\n\t\t// When the bottom of the screen is reached. Ask for more images.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n\t\tthis.observer = new IntersectionObserver((entries) => {\n\t\t\tif (entries[0].isIntersecting === true) {\n\t\t\t\tthis.$emit(\"moreImages\");\n\t\t\t}\n\t\t});\n\n\t\tthis.observer.observe(this.$refs.reload);\n\t},\n\tunmounted() {\n\t\twindow.removeEventListener(\"resize\", this.debounceUpdateSize);\n\t\tthis.observer.disconnect();\n\t},\n\tmethods: {\n\t\tsetAllImagesLoadedIfTrue() {\n\t\t\tthis.loadedImages++;\n\t\t\tif (this.loadedImages === this.images.length) {\n\t\t\t\tthis.allImagesLoaded = true;\n\t\t\t}\n\t\t},\n\t\tupdateColumns() {\n\t\t\tthis.loadedImages = 0;\n\n\t\t\tthis.initialiseColumns();\n\t\t\tthis.splitImagesIntoColumns();\n\t\t},\n\n\t\tinitialiseColumns() {\n\t\t\tconst body_margins = 30;\n\t\t\tconst card_width = 265;\n\t\t\tthis.columns = Math.floor(\n\t\t\t\t(window.innerWidth - body_margins) / card_width\n\t\t\t);\n\t\t\tconst columnQueue = [];\n\t\t\tfor (let i = 0; i < this.columns; i++) {\n\t\t\t\tcolumnQueue[i] = [];\n\t\t\t}\n\n\t\t\tthis.imageColumns = columnQueue;\n\t\t},\n\n\t\t// Split images into a 2d array of columns first, then images.\n\t\tsplitImagesIntoColumns() {\n\t\t\tfor (let i = 0; i < this.images.length; i++) {\n\t\t\t\tthis.imageColumns[i % this.columns].push(this.images[i]);\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < this.columns; i++) {\n\t\t\t\tthis.imageColumns[i].push();\n\t\t\t}\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcolumns: 0,\n\t\t\timageColumns: [],\n\t\t\tobserver: null,\n\t\t\tloadedImages: 0,\n\t\t\tallImagesLoaded: false,\n\t\t\t// Use data to properly remove event listener;\n\t\t\tdebounceUpdateSize: debounce(this.updateColumns),\n\t\t};\n\t},\n\twatch: {\n\t\timages: function() {\n\t\t\tthis.updateColumns();\n\t\t},\n\t},\n};\n</script>\n\n<style scoped>\n.gallery-container {\n\tmargin: auto;\n\tdisplay: flex;\n}\n\n.gallery-column {\n\tmargin: 0.5rem;\n}\n\n.reload-trigger {\n\twidth: 100vw;\n\theight: 20px;\n}\n</style>\n"],"sourceRoot":""}]}