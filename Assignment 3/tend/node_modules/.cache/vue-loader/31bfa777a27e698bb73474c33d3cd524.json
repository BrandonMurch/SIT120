{"remainingRequest":"/home/brandon/Documents/Independent Programming/tend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/brandon/Documents/Independent Programming/tend/src/components/TheLearnPlants.vue?vue&type=style&index=0&id=46ba8c53&scoped=true&lang=css","dependencies":[{"path":"/home/brandon/Documents/Independent Programming/tend/src/components/TheLearnPlants.vue","mtime":1632341610632},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1632324173000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1632324173000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgIi4uL2Fzc2V0cy9jc3MvdHJhbnNpdGlvbkZhZGUuY3NzIjsKCi5sZWFybi1jb250YWluZXIgewoJbWF4LXdpZHRoOiA4MDBweDsKCW1hcmdpbjogYXV0bzsKCXBvc2l0aW9uOiByZWxhdGl2ZTsKfQoKLnF1ZXN0aW9uLWNvbnRhaW5lciB7CglkaXNwbGF5OiBmbGV4OwoJanVzdGlmeS1jb250ZW50OiBjZW50ZXI7CglmbGV4LXdyYXA6IHdyYXA7CgltYXJnaW4tdG9wOiAxcmVtOwp9CgouY2F0ZWdvcnktY29udGFpbmVyIHsKCWRpc3BsYXk6IGZsZXg7CglqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKCWZsZXgtd3JhcDogd3JhcDsKCXBhZGRpbmc6IDJyZW0gMCA1cmVtIDA7CgltYXgtd2lkdGg6IDgwMHB4OwoJd2lkdGg6IDkwdnc7CgltYXJnaW46IGF1dG87Cn0KCi5sb2FkLWJ1dHRvbiB7CgltYXJnaW4tYm90dG9tOiA1cmVtOwp9Cg=="},{"version":3,"sources":["/home/brandon/Documents/Independent Programming/tend/src/components/TheLearnPlants.vue"],"names":[],"mappings":";AAmLA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;CAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;CAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;CACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;CACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;CACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;CACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACjB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;CACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;CACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;CACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;CACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;CAChB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;CACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACb;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;CACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACpB","file":"/home/brandon/Documents/Independent Programming/tend/src/components/TheLearnPlants.vue","sourceRoot":"","sourcesContent":["<!-- SINGLETON. The area where users can come to learn more about plants and discuss with others. This connects to articles and questions.  -->\n\n<template>\n\t<transition name=\"fade\">\n\t\t<PopUpTextBox\n\t\t\tv-if=\"askQuestionOpen\"\n\t\t\tbuttonText=\"ask question\"\n\t\t\t@close=\"askQuestionOpen = false\"\n\t\t\t@add=\"askQuestion\"\n\t\t/>\n\t</transition>\n\n\t<div class=\"learn-container\">\n\t\t<Input\n\t\t\ttype=\"select\"\n\t\t\tv-model=\"selectedCategory\"\n\t\t\tlabel=\"Select a\n\t\t\tcategory to learn about...\"\n\t\t\t:options=\"getCategories()\"\n\t\t/>\n\n\t\t<div class=\"question-container\">\n\t\t\t<Button role=\"link\" tabindex=\"0\" @click=\"askQuestionOpen = true\">\n\t\t\t\tAsk Question\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\trole=\"link\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\t@click=\"\n\t\t\t\t\t$router.push({\n\t\t\t\t\t\tname: 'questions-list',\n\t\t\t\t\t\tparams: { answered: 'unanswered' },\n\t\t\t\t\t})\n\t\t\t\t\"\n\t\t\t>\n\t\t\t\tAnswer a question\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\trole=\"link\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\t@click=\"\n\t\t\t\t\t$router.push({\n\t\t\t\t\t\tname: 'questions-list',\n\t\t\t\t\t\tparams: { answered: 'answered' },\n\t\t\t\t\t})\n\t\t\t\t\"\n\t\t\t>\n\t\t\t\tsee all answered questions\n\t\t\t</Button>\n\t\t</div>\n\n\t\t<div class=\"category-container\">\n\t\t\t<transition-group name=\"fade\">\n\t\t\t\t<CardImageSmall\n\t\t\t\t\tv-for=\"article of articles\"\n\t\t\t\t\t:key=\"article.id\"\n\t\t\t\t\t:text=\"article.text\"\n\t\t\t\t\t:title=\"article.title\"\n\t\t\t\t\t:subtitle=\"getFormattedDate(article.datetime)\"\n\t\t\t\t\t:imageSource=\"article.imageSource\"\n\t\t\t\t\t@click=\"\n\t\t\t\t\t\t// Go to a specific article.\n\t\t\t\t\t\t$router.push({\n\t\t\t\t\t\t\tname: 'articles',\n\t\t\t\t\t\t\tparams: { id: article.id },\n\t\t\t\t\t\t})\n\t\t\t\t\t\"\n\t\t\t\t\trole=\"link\"\n\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t/>\n\t\t\t</transition-group>\n\n\t\t\t<Button\n\t\t\t\tclass=\"load-button\"\n\t\t\t\tv-if=\"areThereMoreArticles\"\n\t\t\t\t@click=\"getMoreArticles\"\n\t\t\t>\n\t\t\t\tload more\n\t\t\t</Button>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport Button from \"./AppButton.vue\";\nimport Input from \"./AppInput.vue\";\nimport PopUpTextBox from \"./PopUpTextBox.vue\";\nimport CardImageSmall from \"./CardImageSmall.vue\";\nimport { getFormattedDate } from \"../composables/getFormattedDate\";\nimport { ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nexport default {\n\tname: \"LearnPlants\",\n\tcomponents: { Button, Input, CardImageSmall, PopUpTextBox },\n\tsetup() {\n\t\tconst askQuestionOpen = ref(false);\n\t\tconst store = useStore();\n\t\tconst selectedCategory = ref(null);\n\t\tconst numberOfArticlesDisplaying = ref(2);\n\n\t\t// Get categories and format them for an select element.\n\t\tconst getCategories = () => {\n\t\t\tconst options = [];\n\t\t\tfor (let option of store.getters[\"learn/categories/all\"]) {\n\t\t\t\toptions.push({ text: option, value: option });\n\t\t\t}\n\t\t\treturn options;\n\t\t};\n\n\t\t// See if there are more articles. Display a load more button if there are.\n\t\tconst checkForMoreArticles = () =>\n\t\t\tstore.getters[\"learn/articles/all\"].length >\n\t\t\tnumberOfArticlesDisplaying.value;\n\n\t\tconst areThereMoreArticles = ref(checkForMoreArticles());\n\n\t\twatch(numberOfArticlesDisplaying, () => {\n\t\t\tareThereMoreArticles.value = checkForMoreArticles();\n\t\t});\n\n\t\t// Get articles based on category.\n\t\tconst getRelevantArticles = () => {\n\t\t\tif (\n\t\t\t\tselectedCategory.value == \"all\" ||\n\t\t\t\tselectedCategory.value == null\n\t\t\t) {\n\t\t\t\treturn store.getters[\"learn/articles/all\"].slice(\n\t\t\t\t\t0,\n\t\t\t\t\tnumberOfArticlesDisplaying.value\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn store.getters[\"learn/articles/byCategories\"](\n\t\t\t\t\tselectedCategory.value\n\t\t\t\t).slice(0, numberOfArticlesDisplaying.value);\n\t\t\t}\n\t\t};\n\n\t\tconst articles = ref(getRelevantArticles());\n\n\t\t// Watch for more articles or a category change and then fetch articles.\n\t\twatch(numberOfArticlesDisplaying, () => {\n\t\t\tarticles.value = getRelevantArticles();\n\t\t});\n\t\twatch(selectedCategory, () => {\n\t\t\tarticles.value = getRelevantArticles();\n\t\t\tareThereMoreArticles.value = checkForMoreArticles();\n\t\t});\n\n\t\tconst getMoreArticles = () => {\n\t\t\tnumberOfArticlesDisplaying.value += 5;\n\t\t};\n\n\t\t// Ask a question.\n\t\tconst askQuestion = (questionText) => {\n\t\t\tstore.commit(\"learn/questions/add\", {\n\t\t\t\ttext: questionText,\n\t\t\t\tcategory: !selectedCategory.value\n\t\t\t\t\t? undefined\n\t\t\t\t\t: selectedCategory.value,\n\t\t\t});\n\t\t\taskQuestionOpen.value = false;\n\t\t};\n\n\t\treturn {\n\t\t\tselectedCategory,\n\t\t\tgetRelevantArticles,\n\t\t\tgetFormattedDate,\n\t\t\tgetCategories,\n\t\t\tarticles,\n\t\t\tgetMoreArticles,\n\t\t\tareThereMoreArticles,\n\t\t\taskQuestionOpen,\n\t\t\taskQuestion,\n\t\t};\n\t},\n};\n</script>\n\n<style scoped>\n@import \"../assets/css/transitionFade.css\";\n\n.learn-container {\n\tmax-width: 800px;\n\tmargin: auto;\n\tposition: relative;\n}\n\n.question-container {\n\tdisplay: flex;\n\tjustify-content: center;\n\tflex-wrap: wrap;\n\tmargin-top: 1rem;\n}\n\n.category-container {\n\tdisplay: flex;\n\tjustify-content: center;\n\tflex-wrap: wrap;\n\tpadding: 2rem 0 5rem 0;\n\tmax-width: 800px;\n\twidth: 90vw;\n\tmargin: auto;\n}\n\n.load-button {\n\tmargin-bottom: 5rem;\n}\n</style>\n"]}]}