{"remainingRequest":"/home/brandon/Documents/Independent Programming/tend/node_modules/thread-loader/dist/cjs.js!/home/brandon/Documents/Independent Programming/tend/node_modules/babel-loader/lib/index.js!/home/brandon/Documents/Independent Programming/tend/node_modules/eslint-loader/index.js??ref--13-0!/home/brandon/Documents/Independent Programming/tend/src/store/modules/learnSubModules/species.js","dependencies":[{"path":"/home/brandon/Documents/Independent Programming/tend/src/store/modules/learnSubModules/species.js","mtime":1632342667780},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLWluZGV4LmpzIjsKaW1wb3J0IGxlYXJuSW5mbyBmcm9tICcuLi8uLi8uLi9hc3NldHMvanNvbi9sZWFybi5qc29uJzsKCnZhciBzdGF0ZSA9IGZ1bmN0aW9uIHN0YXRlKCkgewogIHJldHVybiB7CiAgICBzcGVjaWVzTGlzdDogbGVhcm5JbmZvLnNwZWNpZXMKICB9Owp9OwoKdmFyIGdldHRlcnMgPSB7CiAgYWxsOiBmdW5jdGlvbiBhbGwoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5zcGVjaWVzTGlzdDsKICB9LAogIG9uZTogZnVuY3Rpb24gb25lKHN0YXRlKSB7CiAgICByZXR1cm4gZnVuY3Rpb24gKG5hbWUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnNwZWNpZXNMaXN0LmZpbmQoZnVuY3Rpb24gKHNwZWNpZXMpIHsKICAgICAgICByZXR1cm4gc3BlY2llcy5uYW1lLnRvTG93ZXJDYXNlKCkgPT0gbmFtZS50b0xvd2VyQ2FzZSgpOwogICAgICB9KTsKICAgIH07CiAgfQp9Owp2YXIgbXV0YXRpb25zID0gewogIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKHN0YXRlLCBzcGVjaWVzVG9VcGRhdGUpIHsKICAgIHZhciBpbmRleCA9IHN0YXRlLnNwZWNpZXNMaXN0LmZpbmRJbmRleChmdW5jdGlvbiAoc3BlY2llcykgewogICAgICByZXR1cm4gc3BlY2llcy5uYW1lLnRvTG93ZXJDYXNlKCkgPT0gc3BlY2llc1RvVXBkYXRlLm5hbWUudG9Mb3dlckNhc2UoKTsKICAgIH0pOwogICAgc3RhdGUuc3BlY2llc0xpc3RbaW5kZXhdID0gc3BlY2llc1RvVXBkYXRlOwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7CiAgYWRkQ29tbWVudDogZnVuY3Rpb24gYWRkQ29tbWVudChfcmVmLCBfcmVmMikgewogICAgdmFyIHN0YXRlID0gX3JlZi5zdGF0ZSwKICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdCwKICAgICAgICByb290U3RhdGUgPSBfcmVmLnJvb3RTdGF0ZTsKICAgIHZhciBuYW1lID0gX3JlZjIubmFtZSwKICAgICAgICB0ZXh0ID0gX3JlZjIudGV4dDsKICAgIHZhciBzcGVjaWVzID0gc3RhdGUuc3BlY2llc0xpc3QuZmluZChmdW5jdGlvbiAoY3VycmVudFNwZWNpZXMpIHsKICAgICAgcmV0dXJuIGN1cnJlbnRTcGVjaWVzLm5hbWUudG9Mb3dlckNhc2UoKSA9PSBuYW1lLnRvTG93ZXJDYXNlKCk7CiAgICB9KTsKICAgIHZhciBuZXdfY29tbWVudCA9IHsKICAgICAgaWQ6IChzcGVjaWVzLmNvbW1lbnRzLmxlbmd0aCA+IDAgPyBzcGVjaWVzLmNvbW1lbnRzWzBdLmlkIDogMTAwMSkgKyAxLAogICAgICBib2R5OiB0ZXh0LAogICAgICBkYXRldGltZTogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLAogICAgICB1c2VyOiByb290U3RhdGUudXNlci5uYW1lCiAgICB9OwogICAgc3BlY2llcy5jb21tZW50cy51bnNoaWZ0KG5ld19jb21tZW50KTsKICAgIGNvbW1pdCgndXBkYXRlJywgc3BlY2llcyk7CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogc3RhdGUsCiAgZ2V0dGVyczogZ2V0dGVycywKICBtdXRhdGlvbnM6IG11dGF0aW9ucywKICBhY3Rpb25zOiBhY3Rpb25zCn07"},{"version":3,"sources":["/home/brandon/Documents/Independent Programming/tend/src/store/modules/learnSubModules/species.js"],"names":["learnInfo","state","speciesList","species","getters","all","one","name","find","toLowerCase","mutations","update","speciesToUpdate","index","findIndex","actions","addComment","commit","rootState","text","currentSpecies","new_comment","id","comments","length","body","datetime","Date","toISOString","user","unshift","namespaced"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,iCAAtB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChB,SAAO;AACHC,IAAAA,WAAW,EAAEF,SAAS,CAACG;AADpB,GAAP;AAGH,CAJD;;AAMA,IAAMC,OAAO,GAAG;AACZC,EAAAA,GAAG,EAAE,aAACJ,KAAD,EAAW;AACZ,WAAOA,KAAK,CAACC,WAAb;AACH,GAHW;AAIZI,EAAAA,GAAG,EAAE,aAACL,KAAD;AAAA,WAAW,UAACM,IAAD,EAAU;AACtB,aAAON,KAAK,CAACC,WAAN,CAAkBM,IAAlB,CAAuB,UAAAL,OAAO;AAAA,eAAIA,OAAO,CAACI,IAAR,CAAaE,WAAb,MAA8BF,IAAI,CAACE,WAAL,EAAlC;AAAA,OAA9B,CAAP;AACH,KAFI;AAAA;AAJO,CAAhB;AASA,IAAMC,SAAS,GAAG;AACdC,EAAAA,MADc,kBACPV,KADO,EACAW,eADA,EACiB;AAC3B,QAAMC,KAAK,GAAGZ,KAAK,CAACC,WAAN,CAAkBY,SAAlB,CAA4B,UAAAX,OAAO;AAAA,aAAIA,OAAO,CAACI,IAAR,CAAaE,WAAb,MAA8BG,eAAe,CAACL,IAAhB,CAAqBE,WAArB,EAAlC;AAAA,KAAnC,CAAd;AACAR,IAAAA,KAAK,CAACC,WAAN,CAAkBW,KAAlB,IAA2BD,eAA3B;AACH;AAJa,CAAlB;AAQA,IAAMG,OAAO,GAAG;AACZC,EAAAA,UADY,mCAC6C;AAAA,QAA5Cf,KAA4C,QAA5CA,KAA4C;AAAA,QAArCgB,MAAqC,QAArCA,MAAqC;AAAA,QAA7BC,SAA6B,QAA7BA,SAA6B;AAAA,QAAdX,IAAc,SAAdA,IAAc;AAAA,QAARY,IAAQ,SAARA,IAAQ;AACrD,QAAMhB,OAAO,GAAGF,KAAK,CAACC,WAAN,CAAkBM,IAAlB,CAAuB,UAAAY,cAAc;AAAA,aACjDA,cAAc,CAACb,IAAf,CAAoBE,WAApB,MAAqCF,IAAI,CAACE,WAAL,EADY;AAAA,KAArC,CAAhB;AAGA,QAAMY,WAAW,GAAG;AAChBC,MAAAA,EAAE,EAAE,CAACnB,OAAO,CAACoB,QAAR,CAAiBC,MAAjB,GAA0B,CAA1B,GAA8BrB,OAAO,CAACoB,QAAR,CAAiB,CAAjB,EAAoBD,EAAlD,GAAuD,IAAxD,IAAgE,CADpD;AAEhBG,MAAAA,IAAI,EAAEN,IAFU;AAGhBO,MAAAA,QAAQ,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAHM;AAIhBC,MAAAA,IAAI,EAAEX,SAAS,CAACW,IAAV,CAAetB;AAJL,KAApB;AAMAJ,IAAAA,OAAO,CAACoB,QAAR,CAAiBO,OAAjB,CAAyBT,WAAzB;AAEAJ,IAAAA,MAAM,CAAC,QAAD,EAAWd,OAAX,CAAN;AAEH;AAfW,CAAhB;AAmBA,eAAe;AACX4B,EAAAA,UAAU,EAAE,IADD;AAEX9B,EAAAA,KAAK,EAALA,KAFW;AAGXG,EAAAA,OAAO,EAAPA,OAHW;AAIXM,EAAAA,SAAS,EAATA,SAJW;AAKXK,EAAAA,OAAO,EAAPA;AALW,CAAf","sourcesContent":["import learnInfo from '../../../assets/json/learn.json';\n\nconst state = () => {\n    return {\n        speciesList: learnInfo.species,\n    }\n}\n\nconst getters = {\n    all: (state) => {\n        return state.speciesList;\n    },\n    one: (state) => (name) => {\n        return state.speciesList.find(species => species.name.toLowerCase() == name.toLowerCase());\n    }\n}\n\nconst mutations = {\n    update(state, speciesToUpdate) {\n        const index = state.speciesList.findIndex(species => species.name.toLowerCase() == speciesToUpdate.name.toLowerCase());\n        state.speciesList[index] = speciesToUpdate;\n    },\n}\n\n\nconst actions = {\n    addComment({ state, commit, rootState }, { name, text }) {\n        const species = state.speciesList.find(currentSpecies =>\n            currentSpecies.name.toLowerCase() == name.toLowerCase()\n        );\n        const new_comment = {\n            id: (species.comments.length > 0 ? species.comments[0].id : 1001) + 1,\n            body: text,\n            datetime: new Date().toISOString(),\n            user: rootState.user.name,\n        }\n        species.comments.unshift(new_comment)\n\n        commit('update', species);\n\n    }\n}\n\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    mutations,\n    actions,\n}"]}]}