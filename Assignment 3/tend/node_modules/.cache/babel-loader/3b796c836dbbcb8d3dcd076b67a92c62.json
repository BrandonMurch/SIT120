{"remainingRequest":"/home/brandon/Documents/Independent Programming/tend/node_modules/thread-loader/dist/cjs.js!/home/brandon/Documents/Independent Programming/tend/node_modules/babel-loader/lib/index.js!/home/brandon/Documents/Independent Programming/tend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/brandon/Documents/Independent Programming/tend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/brandon/Documents/Independent Programming/tend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/brandon/Documents/Independent Programming/tend/src/components/CardListWithTextbox.vue?vue&type=template&id=a56fdbec&scoped=true","dependencies":[{"path":"/home/brandon/Documents/Independent Programming/tend/src/components/CardListWithTextbox.vue","mtime":1632333631813},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1632324173000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1632324173000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgeyByZXNvbHZlQ29tcG9uZW50IGFzIF9yZXNvbHZlQ29tcG9uZW50LCBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUsIHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCBjcmVhdGVUZXh0Vk5vZGUgYXMgX2NyZWF0ZVRleHRWTm9kZSwgd2l0aEN0eCBhcyBfd2l0aEN0eCwgcmVuZGVyTGlzdCBhcyBfcmVuZGVyTGlzdCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgVHJhbnNpdGlvbkdyb3VwIGFzIF9UcmFuc2l0aW9uR3JvdXAsIG5vcm1hbGl6ZVN0eWxlIGFzIF9ub3JtYWxpemVTdHlsZSB9IGZyb20gInZ1ZSI7CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF9jb21wb25lbnRfSW5wdXQgPSBfcmVzb2x2ZUNvbXBvbmVudCgiSW5wdXQiKTsKCiAgdmFyIF9jb21wb25lbnRfQnV0dG9uID0gX3Jlc29sdmVDb21wb25lbnQoIkJ1dHRvbiIpOwoKICB2YXIgX2NvbXBvbmVudF9DYXJkVGV4dCA9IF9yZXNvbHZlQ29tcG9uZW50KCJDYXJkVGV4dCIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCB7CiAgICBjbGFzczogImNhcmQtY29udGFpbmVyIiwKICAgIHN0eWxlOiBfbm9ybWFsaXplU3R5bGUoewogICAgICAnb3ZlcmZsb3cteSc6ICRwcm9wcy5zY3JvbGwgPyAnc2Nyb2xsJyA6ICd2aXNpYmxlJwogICAgfSkKICB9LCBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfSW5wdXQsIHsKICAgIHR5cGU6ICJ0ZXh0YXJlYSIsCiAgICBtb2RlbFZhbHVlOiAkc2V0dXAubmV3VGV4dCwKICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzBdIHx8IChfY2FjaGVbMF0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkc2V0dXAubmV3VGV4dCA9ICRldmVudDsKICAgIH0pCiAgfSwgbnVsbCwgOCwgWyJtb2RlbFZhbHVlIl0pLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9CdXR0b24sIHsKICAgIG9uQ2xpY2s6ICRzZXR1cC5hZGQsCiAgICBjbGFzczogInNhdmUtYnV0dG9uIgogIH0sIHsKICAgIGRlZmF1bHQ6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFtfY3JlYXRlVGV4dFZOb2RlKF90b0Rpc3BsYXlTdHJpbmcoJHByb3BzLmJ1dHRvblRleHQpLCAxKV07CiAgICB9KSwKICAgIF86IDEKICB9LCA4LCBbIm9uQ2xpY2siXSksIF9jcmVhdGVWTm9kZShfVHJhbnNpdGlvbkdyb3VwLCB7CiAgICBuYW1lOiAiZmFkZSIKICB9LCB7CiAgICBkZWZhdWx0OiBfd2l0aEN0eChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBbKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVFbGVtZW50QmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdCgkcHJvcHMudmFsdWVzLCBmdW5jdGlvbiAobm90ZSkgewogICAgICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X0NhcmRUZXh0LCB7CiAgICAgICAgICBrZXk6IG5vdGUuaWQsCiAgICAgICAgICB0aXRsZTogbm90ZS50aXRsZSB8fCBub3RlLnVzZXIgfHwgJycsCiAgICAgICAgICBzdWJ0aXRsZTogbm90ZS5zdWJ0aXRsZSB8fCAkc2V0dXAuZ2V0Rm9ybWF0dGVkRGF0ZShub3RlLmRhdGUgfHwgbm90ZS5kYXRldGltZSkgfHwgJycsCiAgICAgICAgICB0ZXh0OiBub3RlLnRleHQgfHwgbm90ZS5ib2R5LAogICAgICAgICAgb25EZWxldGU6IGZ1bmN0aW9uIG9uRGVsZXRlKCRldmVudCkgewogICAgICAgICAgICByZXR1cm4gX2N0eC4kZW1pdCgnZGVsZXRlJywgbm90ZS5pZCk7CiAgICAgICAgICB9LAogICAgICAgICAgZGVsZXRhYmxlOiAkcHJvcHMuZGVsZXRhYmxlCiAgICAgICAgfSwgbnVsbCwgOCwgWyJ0aXRsZSIsICJzdWJ0aXRsZSIsICJ0ZXh0IiwgIm9uRGVsZXRlIiwgImRlbGV0YWJsZSJdKTsKICAgICAgfSksIDEyOCkpXTsKICAgIH0pLAogICAgXzogMQogIH0pXSwgNCk7Cn0="},{"version":3,"sources":["/home/brandon/Documents/Independent Programming/tend/src/components/CardListWithTextbox.vue"],"names":[],"mappings":";;;;;;;;;;uBAiBC,mBAAA,CAwBM,KAxBN,EAwBM;AAvBL,IAAA,KAAK,EAAC,gBAuBD;AAtBJ,IAAA,KAAK,EAAA,eAAA,CAAA;AAAA,oBAAkB,MAAA,CAAA,MAAA,GAAM,QAAN,GAAM;AAAxB,KAAA;AAsBD,GAxBN,E,CAIC,YAAA,CAA2C,gBAA3C,EAA2C;AAApC,IAAA,IAAI,EAAC,UAA+B;gBAAX,MAAA,CAAA,OAAW;;aAAX,MAAA,CAAA,OAAA,GAAO,M;;AAAI,GAA3C,E,IAAA,E,CAAA,E,cAAA,C,EACA,YAAA,CAES,iBAFT,EAES;AAFA,IAAA,OAAK,EAAE,MAAA,CAAA,GAEP;AAFY,IAAA,KAAK,EAAC;AAElB,GAFT,E;sBACC;AAAA,aAAgB,C,kCAAb,MAAA,CAAA,U,GAAU,C,CAAG,CAAhB;AAAA,K;;GADD,E,CAAA,E,WAAA,C,EAGA,YAAA,CAemB,gBAfnB,EAemB;AAfD,IAAA,IAAI,EAAC;AAeJ,GAfnB,EAA6B;sBAG3B;AAAA,aAAsB,E,kBADvB,mBAAA,CAYE,SAZF,EAYE,IAZF,EAYE,WAAA,CAXc,MAAA,CAAA,MAWd,EAXoB,UAAd,IAAc,EAAV;6BADZ,YAAA,CAYE,mBAZF,EAYE;AAVA,UAAA,GAAG,EAAE,IAAI,CAAC,EAUV;AATA,UAAA,KAAK,EAAE,IAAI,CAAC,KAAL,IAAc,IAAI,CAAC,IAAnB,IAAuB,EAS9B;AARA,UAAA,QAAQ,EAAQ,IAAI,CAAC,QAAL,IAAuB,MAAA,CAAA,gBAAA,CAAiB,IAAI,CAAC,IAAL,IAAa,IAAI,CAAC,QAAnC,CAAvB,I,EAQhB;AAHA,UAAA,IAAI,EAAE,IAAI,CAAC,IAAL,IAAa,IAAI,CAAC,IAGxB;AAFA,UAAA,QAAM,EAAA,kBAAA,MAAA;AAAA,mBAAE,IAAA,CAAA,KAAA,CAAK,QAAL,EAAgB,IAAI,CAAC,EAArB,CAAF;AAAA,WAEN;AADA,UAAA,SAAS,EAAE,MAAA,CAAA;AACX,SAZF,E,IAAA,E,CAAA,E,sDAAA,C;OAYE,CAZF,E,GAAA,CACuB,EAAtB;AAAA,K,CAH2B;;AAAA,GAA7B,C,CARD,E,CAAA,C","sourcesContent":["<!--\nDescription: Displays a list of cards with a textbox at the top\n\nProps: \n\tvalues\t\tA list of objects containing all information for Card Text.\n\n\tscroll\t\tIf true, then overflow:scroll; is applied, otherwise \n\t\t\t\toverflow:visible is applied.\n\tdeletable\tIf true, text cards can be deleted\n\nEmits:\n\tadd  \t\tThe text within the text box will be submitted.\n\n\tdelete \t \tThe id of the card will be passed back.\n-->\n\n<template>\n\t<div\n\t\tclass=\"card-container\"\n\t\t:style=\"{ 'overflow-y': scroll ? 'scroll' : 'visible' }\"\n\t>\n\t\t<Input type=\"textarea\" v-model=\"newText\" />\n\t\t<Button @click=\"add\" class=\"save-button\">\n\t\t\t{{ buttonText }}\n\t\t</Button>\n\t\t<transition-group name=\"fade\">\n\t\t\t<!-- Can additionally use user as a title if there is no title. Same with subtitle and date. -->\n\t\t\t<CardText\n\t\t\t\tv-for=\"note of values\"\n\t\t\t\t:key=\"note.id\"\n\t\t\t\t:title=\"note.title || note.user || ''\"\n\t\t\t\t:subtitle=\"\n\t\t\t\t\tnote.subtitle ||\n\t\t\t\t\t\tgetFormattedDate(note.date || note.datetime) ||\n\t\t\t\t\t\t''\n\t\t\t\t\"\n\t\t\t\t:text=\"note.text || note.body\"\n\t\t\t\t@delete=\"$emit('delete', note.id)\"\n\t\t\t\t:deletable=\"deletable\"\n\t\t\t/>\n\t\t</transition-group>\n\t</div>\n</template>\n\n<script>\nimport Input from \"./AppInput.vue\";\nimport Button from \"./AppButton.vue\";\nimport CardText from \"./CardText.vue\";\nimport { ref } from \"vue\";\nimport { getFormattedDate } from \"../composables/getFormattedDate\";\nexport default {\n\tname: \"CardListWithTextbox\",\n\tprops: {\n\t\tvalues: Array,\n\t\tbuttonText: String,\n\t\tscroll: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t\tdeletable: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\tcomponents: { Input, Button, CardText },\n\temits: [\"add\", \"delete\"],\n\tsetup(props, { emit }) {\n\t\tconst newText = ref(\"\");\n\t\tconst add = () => {\n\t\t\tif (newText.value.length > 0) {\n\t\t\t\temit(\"add\", newText.value);\n\t\t\t\t// Reset input after submission.\n\t\t\t\tnewText.value = \"\";\n\t\t\t}\n\t\t};\n\t\treturn { newText, add, getFormattedDate };\n\t},\n};\n</script>\n\n<style scoped>\n@import \"../assets/css/transitionFade.css\";\n\n.card-container {\n\tpadding: 3rem;\n\tmax-height: 80vh;\n\tmax-width: 60vw;\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tjustify-content: center;\n\tmargin-bottom: 1rem;\n}\n.save-button {\n\tmargin-bottom: 1rem;\n}\n</style>\n"],"sourceRoot":""}]}