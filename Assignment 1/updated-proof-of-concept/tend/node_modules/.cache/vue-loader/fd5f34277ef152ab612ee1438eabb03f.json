{"remainingRequest":"/home/brandon/Documents/SIT120 - Responsive Web Apps/code/Assignment 3/Vue-app/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/brandon/Documents/SIT120 - Responsive Web Apps/code/Assignment 3/Vue-app/src/components/ImageGallery.vue?vue&type=style&index=0&id=d1d58bb2&scoped=true&lang=css","dependencies":[{"path":"/home/brandon/Documents/SIT120 - Responsive Web Apps/code/Assignment 3/Vue-app/src/components/ImageGallery.vue","mtime":1628064942584},{"path":"/home/brandon/Documents/SIT120 - Responsive Web Apps/code/Assignment 3/Vue-app/node_modules/css-loader/dist/cjs.js","mtime":1628064941700},{"path":"/home/brandon/Documents/SIT120 - Responsive Web Apps/code/Assignment 3/Vue-app/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1628064941676},{"path":"/home/brandon/Documents/SIT120 - Responsive Web Apps/code/Assignment 3/Vue-app/node_modules/postcss-loader/src/index.js","mtime":1628064941768},{"path":"/home/brandon/Documents/SIT120 - Responsive Web Apps/code/Assignment 3/Vue-app/node_modules/cache-loader/dist/cjs.js","mtime":1628064941768},{"path":"/home/brandon/Documents/SIT120 - Responsive Web Apps/code/Assignment 3/Vue-app/node_modules/vue-loader-v16/dist/index.js","mtime":1628064941676}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5nYWxsZXJ5LWNvbnRhaW5lciB7CgltYXJnaW46IGF1dG87CglkaXNwbGF5OiBmbGV4Owp9CgouZ2FsbGVyeS1jb2x1bW4gewoJd2lkdGg6IDI1MHB4OwoJbWFyZ2luOiAwLjVyZW07Cn0K"},{"version":3,"sources":["/home/brandon/Documents/SIT120 - Responsive Web Apps/code/Assignment 3/Vue-app/src/components/ImageGallery.vue"],"names":[],"mappings":";AAiFA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;CAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;CACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACd;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;CACf,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;CACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf","file":"/home/brandon/Documents/SIT120 - Responsive Web Apps/code/Assignment 3/Vue-app/src/components/ImageGallery.vue","sourceRoot":"","sourcesContent":["<template>\n\t<div class=\"gallery-container\">\n\t\t<PopUp\n\t\t\tv-if=\"popupImage\"\n\t\t\tv-bind=\"popupImage\"\n\t\t\t@close=\"popupImage = null\"\n\t\t/>\n\t\t<div\n\t\t\tclass=\"gallery-column\"\n\t\t\tv-for=\"(column, index) in imageColumns\"\n\t\t\t:key=\"index\"\n\t\t>\n\t\t\t<ImageCard\n\t\t\t\tv-for=\"image in column\"\n\t\t\t\t:key=\"image.id\"\n\t\t\t\tv-bind=\"image\"\n\t\t\t\t@click=\"popupImage = image\"\n\t\t\t/>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport ImageCard from \"./ImageCard.vue\";\nimport PopUp from \"./PopUp.vue\";\nimport { debounce } from \"../assets/javascript/debounce\";\n\nexport default {\n\tname: \"ImageGallery\",\n\tcomponents: {\n\t\tImageCard,\n\t\tPopUp,\n\t},\n\tprops: {\n\t\timages: Array,\n\t},\n\t/*\n        For monitoring the resize of the window, I use the lifecycle hooks\n        to create global event listeners. When the component is unmounted,\n        the listener will be removed. \n\n        https://vuejs.org/v2/api/#Options-Lifecycle-Hooks\n        https://vuejs.org/v2/api/#created\n        https://vuejs.org/v2/api/#mounted\n        https://www.w3schools.com/js/js_htmldom_eventlistener.asp\n    */\n\tcreated() {\n\t\twindow.addEventListener(\"resize\", this.debounceUpdateSize);\n\t},\n\tunmounted() {\n\t\twindow.removeEventListener(\"resize\", this.debounceUpdateSize);\n\t},\n\tmethods: {\n\t\tupdateColumnsOnResize() {\n\t\t\tthis.imageColumns = this.splitImagesIntoColumns();\n\t\t},\n\t\t// Split images into a 2d array of columns first, then images.\n\t\tsplitImagesIntoColumns() {\n\t\t\tconst columns = Math.floor(window.innerWidth / 265);\n\t\t\tconst columnQueue = [];\n\t\t\tfor (let i = 0; i < columns; i++) {\n\t\t\t\tcolumnQueue[i] = [];\n\t\t\t}\n\t\t\tfor (let i = 0; i < this.images.length; i++) {\n\t\t\t\tcolumnQueue[i % columns].push(this.images[i]);\n\t\t\t}\n\t\t\treturn columnQueue;\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\timageColumns: this.splitImagesIntoColumns(),\n\t\t\tpopupImage: null,\n\t\t\t// Use data to properly remove event listener;\n\t\t\tdebounceUpdateSize: debounce(this.updateColumnsOnResize),\n\t\t};\n\t},\n};\n</script>\n\n<style scoped>\n.gallery-container {\n\tmargin: auto;\n\tdisplay: flex;\n}\n\n.gallery-column {\n\twidth: 250px;\n\tmargin: 0.5rem;\n}\n</style>\n"]}]}