{"remainingRequest":"/home/brandon/Documents/Independent Programming/tend/node_modules/thread-loader/dist/cjs.js!/home/brandon/Documents/Independent Programming/tend/node_modules/babel-loader/lib/index.js!/home/brandon/Documents/Independent Programming/tend/node_modules/eslint-loader/index.js??ref--13-0!/home/brandon/Documents/Independent Programming/tend/src/store/modules/learnSubModules/questions.js","dependencies":[{"path":"/home/brandon/Documents/Independent Programming/tend/src/store/modules/learnSubModules/questions.js","mtime":1632333631925},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCBsZWFybkluZm8gZnJvbSAnLi4vLi4vLi4vYXNzZXRzL2pzb24vbGVhcm4uanNvbic7Cgp2YXIgc3RhdGUgPSBmdW5jdGlvbiBzdGF0ZSgpIHsKICByZXR1cm4gewogICAgcXVlc3Rpb25zOiBsZWFybkluZm8ucXVlc3Rpb25zCiAgfTsKfTsKCnZhciBnZXR0ZXJzID0gewogIGFsbDogZnVuY3Rpb24gYWxsKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUucXVlc3Rpb25zOwogIH0sCiAgb25lOiBmdW5jdGlvbiBvbmUoc3RhdGUpIHsKICAgIHJldHVybiBmdW5jdGlvbiAoaWQpIHsKICAgICAgcmV0dXJuIHN0YXRlLnF1ZXN0aW9ucy5maW5kKGZ1bmN0aW9uIChxdWVzdGlvbikgewogICAgICAgIHJldHVybiBxdWVzdGlvbi5pZCA9PSBpZDsKICAgICAgfSk7CiAgICB9OwogIH0sCiAgYW5zd2VyZWQ6IGZ1bmN0aW9uIGFuc3dlcmVkKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUucXVlc3Rpb25zLmZpbHRlcihmdW5jdGlvbiAocXVlc3Rpb24pIHsKICAgICAgcmV0dXJuIHF1ZXN0aW9uLmFuc3dlcmVkOwogICAgfSk7CiAgfSwKICB1bmFuc3dlcmVkOiBmdW5jdGlvbiB1bmFuc3dlcmVkKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUucXVlc3Rpb25zLmZpbHRlcihmdW5jdGlvbiAocXVlc3Rpb24pIHsKICAgICAgcmV0dXJuICFxdWVzdGlvbi5hbnN3ZXJlZDsKICAgIH0pOwogIH0KfTsKdmFyIG11dGF0aW9ucyA9IHsKICBhZGQ6IGZ1bmN0aW9uIGFkZChzdGF0ZSwgX3JlZikgewogICAgdmFyIHRleHQgPSBfcmVmLnRleHQsCiAgICAgICAgY2F0ZWdvcnkgPSBfcmVmLmNhdGVnb3J5OwogICAgLy8gQWRkIGZ1dHVyZSB2ZXJpZmljYXRpb24uCiAgICB2YXIgbmV3X3F1ZXN0aW9uID0gewogICAgICBpZDogc3RhdGUucXVlc3Rpb25zW3N0YXRlLnF1ZXN0aW9ucy5sZW5ndGggLSAxXS5pZCArIDEsCiAgICAgIHRleHQ6IHRleHQsCiAgICAgIHVzZXI6ICJVc2VyMTIzIiwKICAgICAgLy8gQWRkIGNvbm5lY3Rpb24gdG8gdXNlciBzdG9yZSBsYXRlci4KICAgICAgZGF0ZXRpbWU6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSwKICAgICAgYW5zd2VyZWQ6IGZhbHNlLAogICAgICBjYXRlZ29yaWVzOiBbY2F0ZWdvcnldLAogICAgICByZXNwb25zZXM6IFtdCiAgICB9OwogICAgc3RhdGUucXVlc3Rpb25zLnB1c2gobmV3X3F1ZXN0aW9uKTsKICB9LAogIGFkZFJlc3BvbnNlOiBmdW5jdGlvbiBhZGRSZXNwb25zZShzdGF0ZSwgX3JlZjIpIHsKICAgIHZhciB0ZXh0ID0gX3JlZjIudGV4dCwKICAgICAgICBxdWVzdGlvbklkID0gX3JlZjIucXVlc3Rpb25JZDsKICAgIC8vIEFkZCBmdXR1cmUgdmVyaWZpY2F0aW9uLgogICAgdmFyIGN1cnJlbnRRdWVzdGlvbiA9IHN0YXRlLnF1ZXN0aW9ucy5maW5kKGZ1bmN0aW9uIChxdWVzdGlvbikgewogICAgICByZXR1cm4gcXVlc3Rpb24uaWQgPT0gcXVlc3Rpb25JZDsKICAgIH0pOwogICAgdmFyIGN1cnJlbnRJZCA9IGN1cnJlbnRRdWVzdGlvbi5yZXNwb25zZXMubGVuZ3RoID4gMCA/IGN1cnJlbnRRdWVzdGlvbi5yZXNwb25zZXNbY3VycmVudFF1ZXN0aW9uLnJlc3BvbnNlcy5sZW5ndGggLSAxXS5pZCArIDEgOiAxMDAxOwogICAgc3RhdGUucXVlc3Rpb25zLmZpbmQoZnVuY3Rpb24gKHF1ZXN0aW9uKSB7CiAgICAgIHJldHVybiBxdWVzdGlvbi5pZCA9PSBxdWVzdGlvbklkOwogICAgfSkucmVzcG9uc2VzLnB1c2goewogICAgICBpZDogY3VycmVudElkICsgMSwKICAgICAgdGV4dDogdGV4dCwKICAgICAgdXNlcjogIlVzZXIxMjMiLAogICAgICAvLyBBZGQgY29ubmVjdGlvbiB0byB1c2VyIHN0b3JlIGxhdGVyLgogICAgICBkYXRldGltZTogbmV3IERhdGUoKS50b0lTT1N0cmluZygpCiAgICB9KTsKICB9LAogIGRlbGV0ZTogZnVuY3Rpb24gX2RlbGV0ZShzdGF0ZSwgcXVlc3Rpb25JZCkgewogICAgc3RhdGUucXVlc3Rpb25zID0gc3RhdGUucXVlc3Rpb25zLmZpbHRlcihmdW5jdGlvbiAocXVlc3Rpb24pIHsKICAgICAgcmV0dXJuIHF1ZXN0aW9uLmlkICE9IHF1ZXN0aW9uSWQ7CiAgICB9KTsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBnZXR0ZXJzLAogIG11dGF0aW9uczogbXV0YXRpb25zCn07"},{"version":3,"sources":["/home/brandon/Documents/Independent Programming/tend/src/store/modules/learnSubModules/questions.js"],"names":["learnInfo","state","questions","getters","all","one","id","find","question","answered","filter","unanswered","mutations","add","text","category","new_question","length","user","datetime","Date","toISOString","categories","responses","push","addResponse","questionId","currentQuestion","currentId","delete","namespaced"],"mappings":"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","sourcesContent":["import learnInfo from '../../../assets/json/learn.json';\n\nconst state = () => {\n    return {\n        questions: learnInfo.questions,\n    }\n}\n\nconst getters = {\n    all: (state) => {\n        return state.questions;\n    },\n    one: (state) => (id) => {\n        return state.questions.find(question => question.id == id);\n    },\n    answered: (state) => {\n        return state.questions.filter(question => question.answered);\n    },\n    unanswered: (state) => {\n        return state.questions.filter(question => !question.answered);\n    }\n}\n\nconst mutations = {\n    add(state, { text, category }) {\n        // Add future verification.\n        const new_question = {\n            id: state.questions[state.questions.length - 1].id + 1,\n            text,\n            user: \"User123\", // Add connection to user store later.\n            datetime: new Date().toISOString(),\n            answered: false,\n            categories: [category],\n            responses: []\n        }\n        state.questions.push(new_question);\n    },\n    addResponse(state, { text, questionId }) {\n        // Add future verification.\n        const currentQuestion = state.questions.find(question => question.id == questionId)\n\n        let currentId = currentQuestion.responses.length > 0\n            ? currentQuestion.responses[currentQuestion.responses.length - 1].id + 1\n            : 1001\n\n\n        state.questions.find(question => question.id == questionId).responses.push({\n            id: currentId + 1,\n            text,\n            user: \"User123\", // Add connection to user store later.\n            datetime: new Date().toISOString(),\n        })\n    },\n\n    delete(state, questionId) {\n        state.questions = state.questions.filter(question => {\n            return question.id != questionId\n        });\n    }\n}\n\n\n\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    mutations\n}"]}]}