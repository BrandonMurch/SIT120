{"remainingRequest":"/home/brandon/Documents/Independent Programming/tend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/brandon/Documents/Independent Programming/tend/src/components/ImageGallery.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/brandon/Documents/Independent Programming/tend/src/components/ImageGallery.vue","mtime":1629905831589},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/cache-loader/dist/cjs.js","mtime":1628388539905},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/babel-loader/lib/index.js","mtime":1628388539905},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/cache-loader/dist/cjs.js","mtime":1628388539905},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/vue-loader-v16/dist/index.js","mtime":1628388539541}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBJbWFnZUNhcmQgZnJvbSAiLi9DYXJkSW1hZ2UudnVlIjsKaW1wb3J0IHsgZGVib3VuY2UgfSBmcm9tICIuLi9oZWxwZXJzL2RlYm91bmNlLmpzIjsKCmV4cG9ydCBkZWZhdWx0IHsKCW5hbWU6ICJJbWFnZUdhbGxlcnkiLAoJY29tcG9uZW50czogewoJCUltYWdlQ2FyZCwKCX0sCglwcm9wczogewoJCWltYWdlczogQXJyYXksCgl9LAoJZW1pdHM6IFsiaXRlbUNsaWNrIiwgIm1vcmVJbWFnZXMiXSwKCgkvKgogICAgICAgIExpZmVjeWNsZSBob29rcyBhcmUgdXNlZCB0byBjcmVhdGUgZ2xvYmFsIGV2ZW50IGxpc3RlbmVycy4gV2hlbiB0aGUgY29tcG9uZW50IGlzIHVubW91bnRlZCwgdGhlIGxpc3RlbmVyIHdpbGwgYmUgcmVtb3ZlZCB0byBwcmV2ZW50IG1lbW9yeSBsZWFrcy4KCiAgICAgICAgaHR0cHM6Ly92dWVqcy5vcmcvdjIvYXBpLyNPcHRpb25zLUxpZmVjeWNsZS1Ib29rcwogICAgICAgIGh0dHBzOi8vdnVlanMub3JnL3YyL2FwaS8jY3JlYXRlZAogICAgICAgIGh0dHBzOi8vdnVlanMub3JnL3YyL2FwaS8jbW91bnRlZAogICAgICAgIGh0dHBzOi8vd3d3Lnczc2Nob29scy5jb20vanMvanNfaHRtbGRvbV9ldmVudGxpc3RlbmVyLmFzcAogICAgKi8KCWNyZWF0ZWQoKSB7CgkJd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoInJlc2l6ZSIsIHRoaXMuZGVib3VuY2VVcGRhdGVTaXplKTsKCX0sCgltb3VudGVkKCkgewoJCS8vIERpdiB3aXRoIHRoZSByZWxvYWQgcmVmIGlzIGxvYWRlZCBhdCB0aGUgYm90dG9tIG9mIHRoZSBzY3JlZW4uIE9uY2UgdGhpcyAiaW50ZXJzZWN0cyIgdGhlIHZpZXdwb3J0IChpcyBkaXNwbGF5ZWQgaW4gdGhlIHZpZXdwb3J0KSBpdCB3aWxsIGVtaXQgJ21vcmVJbWFnZXMnLiBBc2sgZm9yIG1vcmUgaW1hZ2VzLgoJCS8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9JbnRlcnNlY3Rpb25fT2JzZXJ2ZXJfQVBJCgkJdGhpcy5vYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcigoZW50cmllcykgPT4gewoJCQlpZiAoZW50cmllc1swXS5pc0ludGVyc2VjdGluZyA9PT0gdHJ1ZSkgewoJCQkJdGhpcy4kZW1pdCgibW9yZUltYWdlcyIpOwoJCQl9CgkJfSk7CgoJCXRoaXMub2JzZXJ2ZXIub2JzZXJ2ZSh0aGlzLiRyZWZzLnJlbG9hZCk7CgoJCXRoaXMudXBkYXRlQ29sdW1ucygpOwoJfSwKCXVubW91bnRlZCgpIHsKCQl3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigicmVzaXplIiwgdGhpcy5kZWJvdW5jZVVwZGF0ZVNpemUpOwoJCXRoaXMub2JzZXJ2ZXIuZGlzY29ubmVjdCgpOwoJfSwKCW1ldGhvZHM6IHsKCQlzZXRBbGxJbWFnZXNMb2FkZWRJZlRydWUoKSB7CgkJCXRoaXMubG9hZGVkSW1hZ2VzKys7CgkJCWlmICh0aGlzLmxvYWRlZEltYWdlcyA9PT0gdGhpcy5pbWFnZXMubGVuZ3RoKSB7CgkJCQl0aGlzLmFsbEltYWdlc0xvYWRlZCA9IHRydWU7CgkJCX0KCQl9LAoJCXVwZGF0ZUNvbHVtbnMoKSB7CgkJCXRoaXMubG9hZGVkSW1hZ2VzID0gMDsKCgkJCXRoaXMuaW5pdGlhbGlzZUNvbHVtbnMoKTsKCQkJdGhpcy5zcGxpdEltYWdlc0ludG9Db2x1bW5zKCk7CgkJfSwKCgkJLy8gRmluZCB0aGUgd2lkdGggb2YgdGhlIGdhbGxlcmllcyBjdXJyZW50IGNvbnRhaW5lci4gRmluZCBob3cgbWFueSBjb2x1bW5zIGNhbiBmaXQgaW5zaWRlIGFuZCBpbml0aWFsaXNlIHRoZSBhcnJheS4KCQlpbml0aWFsaXNlQ29sdW1ucygpIHsKCQkJY29uc3QgcGFnZU1hcmdpbnMgPSAzMDsKCQkJY29uc3QgY2FyZFdpZHRoID0gMjY1OwoJCQl0aGlzLm51bWJlck9mQ29sdW1ucyA9IE1hdGguZmxvb3IoCgkJCQkodGhpcy4kcmVmcy5jb250YWluZXIuY2xpZW50V2lkdGggLSBwYWdlTWFyZ2lucykgLyBjYXJkV2lkdGgKCQkJKTsKCQkJY29uc3QgY29sdW1uUXVldWUgPSBbXTsKCQkJZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLm51bWJlck9mQ29sdW1uczsgaSsrKSB7CgkJCQljb2x1bW5RdWV1ZVtpXSA9IFtdOwoJCQl9CgoJCQl0aGlzLmltYWdlQ29sdW1ucyA9IGNvbHVtblF1ZXVlOwoJCX0sCgoJCS8vIFNwbGl0IGltYWdlcyBpbnRvIGEgMmQgYXJyYXkgb2YgY29sdW1ucyBmaXJzdCwgdGhlbiBpbWFnZXMuCgkJc3BsaXRJbWFnZXNJbnRvQ29sdW1ucygpIHsKCQkJZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmltYWdlcy5sZW5ndGg7IGkrKykgewoJCQkJdGhpcy5pbWFnZUNvbHVtbnNbaSAlIHRoaXMubnVtYmVyT2ZDb2x1bW5zXS5wdXNoKAoJCQkJCXRoaXMuaW1hZ2VzW2ldCgkJCQkpOwoJCQl9CgoJCQlmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubnVtYmVyT2ZDb2x1bW5zOyBpKyspIHsKCQkJCXRoaXMuaW1hZ2VDb2x1bW5zW2ldLnB1c2goKTsKCQkJfQoJCX0sCgl9LAoJZGF0YSgpIHsKCQlyZXR1cm4gewoJCQludW1iZXJPZkNvbHVtbnM6IDAsCgkJCWltYWdlQ29sdW1uczogW10sCgkJCW9ic2VydmVyOiBudWxsLAoJCQlsb2FkZWRJbWFnZXM6IDAsCgkJCWFsbEltYWdlc0xvYWRlZDogZmFsc2UsCgkJCS8vIFVzZSBkYXRhIHRvIHByb3Blcmx5IHJlbW92ZSBldmVudCBsaXN0ZW5lcjsKCQkJZGVib3VuY2VVcGRhdGVTaXplOiBkZWJvdW5jZSh0aGlzLnVwZGF0ZUNvbHVtbnMpLAoJCX07Cgl9LAoJd2F0Y2g6IHsKCQkvLyBSZWdlbmVyYXRlIGNvbHVtbnMgd2hlbmV2ZXIgbW9yZSBpbWFnZXMgYXJlIGxvYWRlZAoJCWltYWdlczogZnVuY3Rpb24oKSB7CgkJCXRoaXMudXBkYXRlQ29sdW1ucygpOwoJCX0sCgl9LAp9Owo="},{"version":3,"sources":["/home/brandon/Documents/Independent Programming/tend/src/components/ImageGallery.vue"],"names":[],"mappings":";AAyBA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEjD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;CACd,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CACV,CAAC;CACD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;CACd,CAAC;CACD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;CAElhJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC;CACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CAC3D,CAAC;CACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACT,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnrD,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;IACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;GACzB;EACD,CAAC,CAAC;;EAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAExC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC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","file":"/home/brandon/Documents/Independent Programming/tend/src/components/ImageGallery.vue","sourceRoot":"","sourcesContent":["<!-- Presents images within the space given. Arranges the image into columns. Once the bottom of the page is reached, 'moreImages' will be emitted. A slot is\nprovided for a special card to be placed in the first place of the first column. -->\n\n<template>\n\t<div ref=\"container\" class=\"gallery-container\">\n\t\t<div\n\t\t\tclass=\"gallery-column\"\n\t\t\tv-for=\"(column, index) in imageColumns\"\n\t\t\t:key=\"index\"\n\t\t>\n\t\t\t<slot v-if=\"index == 0\" />\n\t\t\t<ImageCard\n\t\t\t\tv-for=\"image in column\"\n\t\t\t\t:key=\"image.id\"\n\t\t\t\tv-bind=\"image\"\n\t\t\t\t@imageLoaded=\"setAllImagesLoadedIfTrue\"\n\t\t\t\t@click=\"$emit('itemClick', image)\"\n\t\t\t/>\n\t\t</div>\n\t</div>\n\t<!-- Only display once all images are loaded, to prevent hitting it initially -->\n\t<div v-show=\"allImagesLoaded\" class=\"reload-trigger\" ref=\"reload\"></div>\n</template>\n\n<script>\nimport ImageCard from \"./CardImage.vue\";\nimport { debounce } from \"../helpers/debounce.js\";\n\nexport default {\n\tname: \"ImageGallery\",\n\tcomponents: {\n\t\tImageCard,\n\t},\n\tprops: {\n\t\timages: Array,\n\t},\n\temits: [\"itemClick\", \"moreImages\"],\n\n\t/*\n        Lifecycle hooks are used to create global event listeners. When the component is unmounted, the listener will be removed to prevent memory leaks.\n\n        https://vuejs.org/v2/api/#Options-Lifecycle-Hooks\n        https://vuejs.org/v2/api/#created\n        https://vuejs.org/v2/api/#mounted\n        https://www.w3schools.com/js/js_htmldom_eventlistener.asp\n    */\n\tcreated() {\n\t\twindow.addEventListener(\"resize\", this.debounceUpdateSize);\n\t},\n\tmounted() {\n\t\t// Div with the reload ref is loaded at the bottom of the screen. Once this \"intersects\" the viewport (is displayed in the viewport) it will emit 'moreImages'. Ask for more images.\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n\t\tthis.observer = new IntersectionObserver((entries) => {\n\t\t\tif (entries[0].isIntersecting === true) {\n\t\t\t\tthis.$emit(\"moreImages\");\n\t\t\t}\n\t\t});\n\n\t\tthis.observer.observe(this.$refs.reload);\n\n\t\tthis.updateColumns();\n\t},\n\tunmounted() {\n\t\twindow.removeEventListener(\"resize\", this.debounceUpdateSize);\n\t\tthis.observer.disconnect();\n\t},\n\tmethods: {\n\t\tsetAllImagesLoadedIfTrue() {\n\t\t\tthis.loadedImages++;\n\t\t\tif (this.loadedImages === this.images.length) {\n\t\t\t\tthis.allImagesLoaded = true;\n\t\t\t}\n\t\t},\n\t\tupdateColumns() {\n\t\t\tthis.loadedImages = 0;\n\n\t\t\tthis.initialiseColumns();\n\t\t\tthis.splitImagesIntoColumns();\n\t\t},\n\n\t\t// Find the width of the galleries current container. Find how many columns can fit inside and initialise the array.\n\t\tinitialiseColumns() {\n\t\t\tconst pageMargins = 30;\n\t\t\tconst cardWidth = 265;\n\t\t\tthis.numberOfColumns = Math.floor(\n\t\t\t\t(this.$refs.container.clientWidth - pageMargins) / cardWidth\n\t\t\t);\n\t\t\tconst columnQueue = [];\n\t\t\tfor (let i = 0; i < this.numberOfColumns; i++) {\n\t\t\t\tcolumnQueue[i] = [];\n\t\t\t}\n\n\t\t\tthis.imageColumns = columnQueue;\n\t\t},\n\n\t\t// Split images into a 2d array of columns first, then images.\n\t\tsplitImagesIntoColumns() {\n\t\t\tfor (let i = 0; i < this.images.length; i++) {\n\t\t\t\tthis.imageColumns[i % this.numberOfColumns].push(\n\t\t\t\t\tthis.images[i]\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < this.numberOfColumns; i++) {\n\t\t\t\tthis.imageColumns[i].push();\n\t\t\t}\n\t\t},\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tnumberOfColumns: 0,\n\t\t\timageColumns: [],\n\t\t\tobserver: null,\n\t\t\tloadedImages: 0,\n\t\t\tallImagesLoaded: false,\n\t\t\t// Use data to properly remove event listener;\n\t\t\tdebounceUpdateSize: debounce(this.updateColumns),\n\t\t};\n\t},\n\twatch: {\n\t\t// Regenerate columns whenever more images are loaded\n\t\timages: function() {\n\t\t\tthis.updateColumns();\n\t\t},\n\t},\n};\n</script>\n\n<style scoped>\n.gallery-container {\n\tmargin: auto;\n\tdisplay: flex;\n\twidth: 100%;\n\tjustify-content: center;\n}\n\n.gallery-column {\n\tmargin: 0.5rem;\n}\n\n.reload-trigger {\n\twidth: 100vw;\n\theight: 20px;\n}\n</style>\n"]}]}