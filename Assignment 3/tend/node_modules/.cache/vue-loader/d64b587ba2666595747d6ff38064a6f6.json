{"remainingRequest":"/home/brandon/Documents/Independent Programming/tend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/brandon/Documents/Independent Programming/tend/src/components/QuestionsViewSingle.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/brandon/Documents/Independent Programming/tend/src/components/QuestionsViewSingle.vue","mtime":1632341195567},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/brandon/Documents/Independent Programming/tend/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1632324173000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IHJlZiB9IGZyb20gInZ1ZSI7CmltcG9ydCB7IHVzZVN0b3JlIH0gZnJvbSAidnVleCI7CmltcG9ydCB7IHVzZVJvdXRlIH0gZnJvbSAidnVlLXJvdXRlciI7CmltcG9ydCBDYXJkTGlzdFdpdGhUZXh0Ym94IGZyb20gIi4vQ2FyZExpc3RXaXRoVGV4dGJveC52dWUiOwppbXBvcnQgeyBnZXRGb3JtYXR0ZWREYXRlIH0gZnJvbSAiLi4vY29tcG9zYWJsZXMvZ2V0Rm9ybWF0dGVkRGF0ZSI7CmV4cG9ydCBkZWZhdWx0IHsKCW5hbWU6ICJRdWVzdGlvbnNWaWV3U2luZ2xlIiwKCWNvbXBvbmVudHM6IHsgQ2FyZExpc3RXaXRoVGV4dGJveCB9LAoJc2V0dXAoKSB7CgkJY29uc3Qgc3RvcmUgPSB1c2VTdG9yZSgpOwoJCWNvbnN0IHJvdXRlID0gdXNlUm91dGUoKTsKCQljb25zdCBxdWVzdGlvbiA9IHJlZigKCQkJc3RvcmUuZ2V0dGVyc1sibGVhcm4vcXVlc3Rpb25zL29uZSJdKHJvdXRlLnBhcmFtcy5pZCkKCQkpOwoKCQljb25zdCBhZGRSZXNwb25zZSA9ICh0ZXh0KSA9PiB7CgkJCXN0b3JlLmNvbW1pdCgibGVhcm4vcXVlc3Rpb25zL2FkZFJlc3BvbnNlIiwgewoJCQkJdGV4dCwKCQkJCXF1ZXN0aW9uSWQ6IHF1ZXN0aW9uLnZhbHVlLmlkLAoJCQl9KTsKCQkJcXVlc3Rpb24udmFsdWUgPSBzdG9yZS5nZXR0ZXJzWyJsZWFybi9xdWVzdGlvbnMvb25lIl0oCgkJCQlyb3V0ZS5wYXJhbXMuaWQKCQkJKTsKCQl9OwoKCQlyZXR1cm4geyBxdWVzdGlvbiwgZ2V0Rm9ybWF0dGVkRGF0ZSwgYWRkUmVzcG9uc2UgfTsKCX0sCn07Cg=="},{"version":3,"sources":["/home/brandon/Documents/Independent Programming/tend/src/components/QuestionsViewSingle.vue"],"names":[],"mappings":"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","file":"/home/brandon/Documents/Independent Programming/tend/src/components/QuestionsViewSingle.vue","sourceRoot":"","sourcesContent":["<!--\nDescription: Displays a single question, with all responses. Also includes a textbox for replies.  \n-->\n\n<template>\n\t<div class=\"question-container\">\n\t\t<CardListWithTextbox\n\t\t\tbuttonText=\"save response\"\n\t\t\t:values=\"[question, ...question.responses]\"\n\t\t\t@add=\"addResponse\"\n\t\t/>\n\t</div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useRoute } from \"vue-router\";\nimport CardListWithTextbox from \"./CardListWithTextbox.vue\";\nimport { getFormattedDate } from \"../composables/getFormattedDate\";\nexport default {\n\tname: \"QuestionsViewSingle\",\n\tcomponents: { CardListWithTextbox },\n\tsetup() {\n\t\tconst store = useStore();\n\t\tconst route = useRoute();\n\t\tconst question = ref(\n\t\t\tstore.getters[\"learn/questions/one\"](route.params.id)\n\t\t);\n\n\t\tconst addResponse = (text) => {\n\t\t\tstore.commit(\"learn/questions/addResponse\", {\n\t\t\t\ttext,\n\t\t\t\tquestionId: question.value.id,\n\t\t\t});\n\t\t\tquestion.value = store.getters[\"learn/questions/one\"](\n\t\t\t\troute.params.id\n\t\t\t);\n\t\t};\n\n\t\treturn { question, getFormattedDate, addResponse };\n\t},\n};\n</script>\n\n<style scoped>\n.question-container {\n\tposition: relative;\n\tmargin: auto;\n\tmax-width: 700px;\n\tdisplay: flex;\n\tjustify-content: center;\n\tflex-wrap: wrap;\n}\n</style>\n"]}]}